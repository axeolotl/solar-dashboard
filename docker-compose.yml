version: "3.7"

services:
  grafana:
    image: grafana/grafana:6.7.1-ubuntu
    networks: 
      - grafnet
      - frontnet
    volumes:
      - ./datasources.yml:/etc/grafana/provisioning/datasources/all.yml
      - ./dashboards.yml:/etc/grafana/provisioning/dashboards/all.yml
      - ./notifiers.yml:/etc/grafana/provisioning/notifiers/all.yml
      - ./dashboard.json:/var/lib/grafana/dashboards/solar-dashboard.json
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SERVER_ROOT_URL: https://solar.ferne-gefil.de
      INFLUXDB_READ_USER_PASSWORD: ${INFLUXDB_READ_USER_PASSWORD}
      
  postgres:
    image: postgres:9
    container_name: postgres
    networks: 
      - grafnet
    environment:
      - POSTGRES_PASSWORD=${PG_ADMIN_PASSWORD}
    volumes:
      - ${SOLAR_HEAT_DIR}:/tmp/SC514:ro
      - ./data/postgres:/var/lib/postgresql/data

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    networks: 
      - frontnet
    environment:
      - INFLUXDB_DB=sensorcommunity
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_HTTP_PPROF_ENABLED=false
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_WRITE_USER=ludwig
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
      - INFLUXDB_READ_USER=grafana
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD}
    volumes:
      - ./data/influxdb:/var/lib/influxdb

  nginx:
    image: nginx:1.16-alpine
    restart: unless-stopped
    networks:
      - frontnet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  grafnet:
  frontnet:
